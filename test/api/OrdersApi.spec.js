/*
 * Spedition.de REST API
 *  ## Authorization  Authorization is done with an API token submitted in the authorization header of your request.  `Authorization: Bearer <token>`  ## Date and time format Timezone: Dependent on your account settings. Defaults to `Europe/Berlin`. * **Date** = *Y-m-d* = `2021-01-01` * **Time** = *H:i* = `10:14` * **Date & time** = Y-m-d\\TH:i:sP = `2020-12-09T16:09:53+00:00` or any RFC 3339 compliant date time format.
 *
 * OpenAPI spec version: 1.0.5
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.26
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SpeditiondeRestApi);
  }
}(this, function(expect, SpeditiondeRestApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new SpeditiondeRestApi.OrdersApi();
  });

  describe('(package)', function() {
    describe('OrdersApi', function() {
      describe('createOrder', function() {
        it('should call createOrder successfully', function(done) {
          // TODO: uncomment, update parameter values for createOrder call and complete the assertions
          /*

          instance.createOrder(body, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(SpeditiondeRestApi.Order);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('listOrders', function() {
        it('should call listOrders successfully', function(done) {
          // TODO: uncomment listOrders call and complete the assertions
          /*

          instance.listOrders(function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(SpeditiondeRestApi.OrderCollection);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('ordersIdDelete', function() {
        it('should call ordersIdDelete successfully', function(done) {
          // TODO: uncomment, update parameter values for ordersIdDelete call
          /*

          instance.ordersIdDelete(id, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('ordersIdGet', function() {
        it('should call ordersIdGet successfully', function(done) {
          // TODO: uncomment, update parameter values for ordersIdGet call and complete the assertions
          /*

          instance.ordersIdGet(id, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(SpeditiondeRestApi.Order);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('ordersIdPut', function() {
        it('should call ordersIdPut successfully', function(done) {
          // TODO: uncomment, update parameter values for ordersIdPut call and complete the assertions
          /*

          instance.ordersIdPut(body, id, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(SpeditiondeRestApi.Order);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
    });
  });

}));
